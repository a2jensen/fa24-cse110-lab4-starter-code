{"ast":null,"code":"import { API_BASE_URL } from \"./../constants/constants\";\n// function to get budget from the backend. Method : GET\nexport const fetchBudget = async () => {\n  const response = await fetch(`${API_BASE_URL}/budget`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"failted to fetch budget\");\n  }\n  const jsonResponse = await response.json();\n  console.log('data in fetchbBudget client function', jsonResponse);\n  return jsonResponse.data; // return budget number\n};\nexport const updatedBudget = async budget => {\n  console.log(\"current amount before update\", budget);\n  const response = await fetch(`${API_BASE_URL}/budget`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"failted to update budget\");\n  }\n  console.log(\"new budget\", budget);\n  return budget;\n};","map":{"version":3,"names":["API_BASE_URL","fetchBudget","response","fetch","method","headers","ok","Error","jsonResponse","json","console","log","data","updatedBudget","budget"],"sources":["C:/Users/Angelo Jensen/OneDrive/Desktop/fa24-cse110-lab4-starter-code/client/src/utils/budget-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"./../constants/constants\"\r\nimport { Budget } from \"../types/types\";\r\n\r\n// function to get budget from the backend. Method : GET\r\nexport const fetchBudget = async () : Promise<number> => {\r\n    const response = await fetch(`${API_BASE_URL}/budget`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error(\"failted to fetch budget\");\r\n    }\r\n\r\n    const jsonResponse = await response.json();\r\n    console.log('data in fetchbBudget client function', jsonResponse)\r\n    return jsonResponse.data // return budget number\r\n}\r\n\r\nexport const updatedBudget = async (budget: number) : Promise<number> => {\r\n    console.log (\"current amount before update\", budget )\r\n    const response = await fetch(`${API_BASE_URL}/budget`, {\r\n        method : \"PUT\",\r\n        headers : {\r\n            \"Content-Type\" : \"application/json\"\r\n        },\r\n    })\r\n    if (!response.ok) {\r\n        throw new Error(\"failted to update budget\")\r\n    }\r\n\r\n    console.log(\"new budget\", budget)\r\n\r\n    return budget\r\n};"],"mappings":"AAAA,SAASA,YAAY,QAAQ,0BAA0B;AAGvD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA8B;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;IACnDI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAG;IACrB;EACJ,CAAC,CAAC;EACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC9C;EAEA,MAAMC,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;EAC1CC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEH,YAAY,CAAC;EACjE,OAAOA,YAAY,CAACI,IAAI,EAAC;AAC7B,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,MAAc,IAAuB;EACrEJ,OAAO,CAACC,GAAG,CAAE,8BAA8B,EAAEG,MAAO,CAAC;EACrD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,EAAE;IACnDI,MAAM,EAAG,KAAK;IACdC,OAAO,EAAG;MACN,cAAc,EAAG;IACrB;EACJ,CAAC,CAAC;EACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EAEAG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEG,MAAM,CAAC;EAEjC,OAAOA,MAAM;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}